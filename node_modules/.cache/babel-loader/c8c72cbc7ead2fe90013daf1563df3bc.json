{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salas\\\\Documents\\\\Programacion\\\\SistemasOperativosII\\\\practica_archivos\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { mapa } from \"./ArregloMapa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [memoria, setMemoria] = useState(mapa);\n  const [mode, setMode] = useState(\"\");\n  const [nBloques, setNBloques] = useState(0);\n  const [espacios, setEspacios] = useState([]);\n  const [proceso, setProceso] = useState({\n    nombre: \"\",\n    tamanio: 0\n  });\n  const [listaArchivos, setListaArchivos] = useState([]);\n  useEffect(() => {\n    buscaEspacios();\n  }, [memoria]);\n  console.log(mode);\n  console.log(\"Esta es tu memoria: \", memoria);\n  console.log(\"Este es tu lista de procesos actual: \", listaArchivos);\n  console.log(\"Estos son tus espacios disponibles\", espacios);\n  console.log(espacios.length);\n\n  const agregaProceso = () => {\n    buscaEspacios();\n    llenaMemoriaPorByte();\n    setListaArchivos([...listaArchivos, proceso]);\n    console.log(\"se ha agregado un proceso con exito\");\n    setProceso({\n      nombre: \"\",\n      tamanio: \"\"\n    });\n  };\n\n  const llenaMemoriaPorByte = () => {\n    const arregloAux = memoria.map((bit, index) => {\n      for (let i = 0; i < proceso.tamanio; i++) {\n        if (espacios[i] === index) {\n          return { ...bit,\n            contenido: proceso.nombre\n          };\n        }\n      }\n\n      return bit;\n    });\n    setMemoria(arregloAux);\n  };\n\n  const buscaEspacios = () => {\n    const arregloAux = memoria.map((bit, index) => {\n      if (bit.contenido === \"\") {\n        return index;\n      }\n    });\n    const arregloAux2 = arregloAux.filter(espacio => espacio != undefined);\n    setEspacios(arregloAux2);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Memoria\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: memoria.map((bit, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: bit.posicion\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: memoria.map((bit, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: bit.contenido\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Formulario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-select\",\n          defaultValue: \"\",\n          onChange: e => {\n            setMode(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"--Selecione--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"byte\",\n            children: \"Por Byte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"bloque\",\n            children: \"Por Bloque\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: mode === \"byte\" ?\n          /*#__PURE__*/\n\n          /*por byte*/\n          _jsxDEV(\"div\", {\n            className: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Modo: \", mode]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Crea un archivo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Nombre del archivo \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: proceso.nombre,\n                onChange: e => {\n                  setProceso({ ...proceso,\n                    nombre: e.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Tamanio del archivo \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: proceso.tamanio,\n                onChange: e => {\n                  setProceso({ ...proceso,\n                    tamanio: parseInt(e.target.value)\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-primary\",\n                onClick: agregaProceso,\n                children: \"Crear Archivo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: listaArchivos.map(archi => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card border-success m-1 d-flex\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-header bg-transparent border-success\",\n                    children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                      children: archi.nombre\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 84\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-body text-success\",\n                    children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                      className: \"card-title\",\n                      children: archi.tamanio\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-footer bg-transparent border-success\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n          /*por Bloque*/\n          : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Modo: \", mode]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"LUdFmOWiD+V0u8ISt1gCRTdjJ0Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/salas/Documents/Programacion/SistemasOperativosII/practica_archivos/src/App.js"],"names":["useState","useEffect","mapa","App","memoria","setMemoria","mode","setMode","nBloques","setNBloques","espacios","setEspacios","proceso","setProceso","nombre","tamanio","listaArchivos","setListaArchivos","buscaEspacios","console","log","length","agregaProceso","llenaMemoriaPorByte","arregloAux","map","bit","index","i","contenido","arregloAux2","filter","espacio","undefined","posicion","e","target","value","parseInt","archi"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useState,useEffect} from 'react';\nimport {mapa} from \"./ArregloMapa\"\n\nfunction App() {\n  const [memoria,setMemoria]=useState(mapa);\n  const [mode,setMode]=useState(\"\");\n  const [nBloques,setNBloques]=useState(0);\n  const [espacios,setEspacios]=useState([]);\n  const [proceso,setProceso]=useState({\n    nombre:\"\",\n    tamanio:0\n  });\n  const [listaArchivos, setListaArchivos]=useState([]);\n\n  useEffect(() => {\n    buscaEspacios();\n  },[memoria])\n  \n\n  console.log(mode);\n  console.log(\"Esta es tu memoria: \", memoria);\n  console.log(\"Este es tu lista de procesos actual: \",listaArchivos);\n  console.log(\"Estos son tus espacios disponibles\",espacios);\n  console.log(espacios.length);\n\n\n  const agregaProceso=()=>{\n    buscaEspacios()\n    llenaMemoriaPorByte();\n    setListaArchivos([...listaArchivos,proceso]);\n    console.log(\"se ha agregado un proceso con exito\");  \n    setProceso({nombre:\"\",tamanio:\"\"})\n  }\n  const llenaMemoriaPorByte=()=>{\n      const arregloAux=memoria.map((bit,index)=>{\n        for(let i=0;i<proceso.tamanio;i++){\n            if(espacios[i]===index){\n              return{\n                ...bit,\n                contenido:proceso.nombre\n              }\n            }\n        }\n      return bit;\n    });\n      setMemoria(arregloAux);\n  }\n  const buscaEspacios=()=>{\n    const arregloAux=memoria.map((bit,index)=>{\n        if(bit.contenido===\"\"){\n          return index\n        }  \n    });\n    const arregloAux2=arregloAux.filter((espacio)=>espacio!=undefined);\n    setEspacios(arregloAux2);\n  }\n  return (\n    <div>\n      \n      {/*Memoria*/}\n      <div className='container'>\n        <h1>Memoria</h1>\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n            {memoria.map((bit,i)=>(\n              <th key ={i} scope=\"col\">{bit.posicion}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n            {memoria.map((bit,i)=>(\n              <th key ={i} scope=\"col\">{bit.contenido}</th>\n              ))}\n            </tr>\n          </tbody>\n        </table>\n        {/*------Formulario*/}\n        <h1>Formulario</h1>\n        <div className='container'> \n          <select className=\"form-select\" defaultValue=\"\"  onChange={(e)=>{setMode(e.target.value)}}>\n            <option value=\"\" disabled>--Selecione--</option>\n            <option value=\"byte\" >Por Byte</option>\n            <option value=\"bloque\">Por Bloque</option>\n          </select>\n          <div className='container'>\n            {mode===\"byte\"? \n            /*por byte*/\n              <div className=''>\n                <h3>Modo: {mode}</h3>\n                <h3>Crea un archivo</h3>\n                <br/>\n                <form>\n                  <label>Nombre del archivo </label>\n                  <input \n                    type=\"text\"\n                    value={proceso.nombre}\n                    onChange={(e)=>{setProceso({...proceso,nombre:e.target.value})}}\n                  />\n                  <br/>\n                  <br/>\n                  <label>Tamanio del archivo </label>\n                  <input \n                    type=\"number\"\n                    value={proceso.tamanio}\n                    onChange={(e)=>{setProceso({...proceso,tamanio:parseInt(e.target.value)})}}\n                    />\n                    <br/>\n                    <br/>\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={agregaProceso} >Crear Archivo</button>\n                </form>\n                <div className='d-flex'>\n                  <ul>\n                  {listaArchivos.map((archi)=>(\n                        <div className=\"card border-success m-1 d-flex\">\n                        <div className=\"card-header bg-transparent border-success\"><h5>{archi.nombre}</h5></div>\n                        <div className=\"card-body text-success\">\n                          <h5 className=\"card-title\">{archi.tamanio}</h5>\n                        </div>\n                        <div className=\"card-footer bg-transparent border-success\"></div>\n                      </div>\n                  ))\n                  }\n                  </ul>\n                </div>\n              </div>\n            /*por Bloque*/\n            :<div>\n                <h2>Modo: {mode}</h2>\n            </div>\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}