{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salas\\\\Documents\\\\Programacion\\\\SistemasOperativosII\\\\practica_archivos\\\\src\\\\Components\\\\Raiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport app from '../Theme/app.css';\nimport carpetaIcon from '../assets/img/carpetaIcon.png';\nimport Modal from './Modal';\nimport Modal2 from './Modal2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Raiz = _ref => {\n  _s();\n\n  let {\n    nUsuario,\n    arregloUsuarios,\n    setArregloUsuarios,\n    memoria,\n    setMemoria,\n    memoria2,\n    setMemoria2,\n    mode,\n    setMode,\n    nBloques,\n    setNBloques,\n    espacios,\n    setEspacios,\n    espacios2,\n    setEspacios2,\n    proceso,\n    setProceso,\n    listaArchivos,\n    setListaArchivos,\n    tamanioXbloque,\n    setTamanioXbloque\n  } = _ref;\n  console.log('esta es nuestra lista de archivos: ', listaArchivos);\n  const [posicionFocus, setPosicionFocus] = useState(0);\n  const [carpetaFocus, setCarpetaFocus] = useState(arregloUsuarios['arregloFicheros'][posicionFocus]);\n  const [textoCarpeta, setTextoCarpeta] = useState('');\n  useEffect(() => {\n    //setCarpetaFocus(arregloUsuarios['arregloFicheros'][posicionFocus]);\n    console.log('Estamos en: ', carpetaFocus);\n    console.log('contenido de carpetas', carpetaFocus);\n  }, [posicionFocus, /*#__PURE__*/_jsxDEV(Raiz, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 21\n  }, this)]);\n  useEffect(() => {\n    setCarpetaFocus(arregloUsuarios['arregloFicheros'][posicionFocus]);\n  }, [posicionFocus]);\n  useEffect(() => {\n    buscaEspacios();\n    buscaEspacios2();\n\n    if (nBloques > 0) {\n      setTamanioXbloque(Math.ceil(40 / nBloques));\n      creaMemoria2();\n    }\n  }, [memoria, nBloques, tamanioXbloque]);\n  useEffect(() => {\n    buscaEspacios2();\n  }, [memoria2]);\n\n  const agregaProceso = () => {\n    buscaEspacios();\n    llenaMemoriaPorByte();\n    setListaArchivos([...listaArchivos, proceso]); //console.log(\"se ha agregado un proceso con exito\");  \n\n    setProceso({\n      nombre: \"\",\n      tamanio: \"\"\n    });\n  };\n\n  const llenaMemoriaPorByte = () => {\n    const arregloAux = memoria.map((bit, index) => {\n      for (let i = 0; i < proceso.tamanio; i++) {\n        if (espacios[i] === index) {\n          return { ...bit,\n            contenido: proceso.nombre\n          };\n        }\n      }\n\n      return bit;\n    });\n    setMemoria(arregloAux);\n  };\n\n  const buscaEspacios = () => {\n    const arregloAux = memoria.map((bit, index) => {\n      if (bit.contenido === \"\") {\n        return index;\n      }\n    });\n    const arregloAux2 = arregloAux.filter(espacio => espacio !== undefined);\n    setEspacios(arregloAux2);\n  };\n\n  const buscaEspacios2 = () => {\n    const arregloAux = memoria2.map((bit, index) => {\n      if (bit.contenido === \"\") {\n        return index;\n      }\n    });\n    const arregloAux2 = arregloAux.filter(espacio => espacio !== undefined);\n    setEspacios2(arregloAux2);\n  };\n\n  const eliminaArchivo = archivo => {\n    //limpiamos la memoria de nuestro espacio\n    //console.log(\"este es el archivo a eliminar\",archivo);\n    const arregloAux = memoria2.map((bit, index) => {\n      if (archivo === bit.contenido) {\n        //console.log(\"El archivo se encontro en las siguientes posiciones,:\",index);\n        return { ...bit,\n          contenido: \"\"\n        };\n      }\n\n      return bit;\n    }); //Eliminamos el proceso de nuestro registro de procesos\n\n    const arregloAux2 = listaArchivos.filter(p => {\n      return p.nombre !== archivo;\n    }); //seteamos estados\n\n    setListaArchivos(arregloAux2);\n    setMemoria(arregloAux);\n  };\n\n  const creaMemoria2 = () => {\n    const arregloAux = memoria.map((bit, index) => {\n      if (index < tamanioXbloque) {\n        //console.log(\"index: \",index,\"tamanioxbloque: \",tamanioXbloque);\n        //console.log(bit)\n        return bit;\n      }\n    });\n    const arregloAux2 = arregloAux.filter(bit => bit !== undefined); //console.log(\"Asi queda la memoria aux: \",arregloAux2);\n\n    setMemoria2(arregloAux2);\n  };\n\n  const agregaArchivoXbloque = proceso => {\n    console.log(\"Este archivo se va agregar: \", proceso);\n    let cantidadBloques = proceso.tamanio / nBloques;\n    console.log(\"El proceso ocupa bloques: \", cantidadBloques);\n    const arregloAux = memoria2.map((bit, index) => {\n      for (let i = 0; i < cantidadBloques; i++) {\n        if (espacios2[i] === index) {\n          return { ...bit,\n            contenido: proceso.nombre\n          };\n        }\n      }\n\n      return bit;\n    });\n    setMemoria2(arregloAux);\n    setListaArchivos([...listaArchivos, proceso]); //console.log(\"se ha agregado un proceso con exito\");  \n\n    setProceso({\n      nombre: \"\",\n      tamanio: \"\"\n    });\n  };\n\n  const irRaiz = () => {\n    setCarpetaFocus(arregloUsuarios['arregloFicheros'][0]);\n  };\n\n  const bajarCarpeta = () => {\n    if (posicionFocus < arregloUsuarios['arregloFicheros'].length - 1) {\n      setPosicionFocus(posicionFocus + 1);\n    }\n  };\n\n  const subirCarpeta = () => {\n    if (posicionFocus > 0) {\n      setPosicionFocus(posicionFocus - 1);\n    }\n  };\n\n  const cambiaFocus = carpeta => {\n    let nombre = carpeta.nombre;\n    let indice = 0;\n    console.log('Vamos a entrar a esta carpeta: ', carpeta);\n    let rutaActual = arregloUsuarios['arregloFicheros'][posicionFocus];\n    rutaActual['carpetas'].map((carpeta, index) => {\n      console.log(carpeta.nombre);\n\n      if (carpeta.nombre === nombre) {\n        console.log('carpeta encontrada');\n        setCarpetaFocus(carpeta);\n      }\n    });\n    console.log(carpetaFocus);\n  };\n\n  const deleteArchivoXCarpeta = nombre => {\n    console.log('Este archivo lo vamos a eliminar: ', nombre);\n    console.log(typeof carpetaFocus['carpetas']);\n    const nuevoArray = carpetaFocus['carpetas'].filter(archivo => archivo.nombre !== nombre);\n    carpetaFocus['carpetas'] = nuevoArray;\n    eliminaArchivo(nombre);\n    alert('Eliminamos un archivo');\n  };\n\n  const buscaCarpeta = () => {\n    console.log('Vamos a buscar esta carpeta: ', textoCarpeta);\n    console.log(\"Esto tenemos en arregloUsuarios\", arregloUsuarios['arregloFicheros']);\n    arregloUsuarios['arregloFicheros'].map(fichero => {\n      if (fichero.nombre === textoCarpeta) {\n        console.log('Encontramos la carpeta!!');\n        setCarpetaFocus(fichero);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Path: \", carpetaFocus.nombre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          justifyContent: 'space-between',\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Modal, {\n          carpetaFocus: carpetaFocus['carpetas'],\n          agregaArchivoXbloque: agregaArchivoXbloque\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal2, {\n          carpetaFocus: carpetaFocus['carpetas']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control me-2\",\n            type: \"search\",\n            onChange: e => {\n              setTextoCarpeta(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-success\",\n            type: \"button\",\n            onClick: () => {\n              buscaCarpeta();\n            },\n            children: \"Buscar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          className: \"btn3\",\n          onClick: () => bajarCarpeta()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          className: \"btn2\",\n          onClick: () => subirCarpeta()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          className: \"btn4\",\n          onClick: () => irRaiz()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }, this), carpetaFocus.carpetas.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: carpetaFocus.carpetas.map(archivo => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          style: {\n            display: 'flex'\n          },\n          children: [archivo['carpetas'] ? /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Directorio:\", archivo.nombre, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-info\",\n              onClick: () => {\n                cambiaFocus(archivo);\n              },\n              children: \"entrar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 52\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 20\n          }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Archivo:\", archivo.nombre, \" |\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" tamanio:\", archivo.tamanio]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 50\n            }, this), \" |\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"ubicacion: \", carpetaFocus.nombre]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 91\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-danger\",\n            onClick: () => {\n              deleteArchivoXCarpeta(archivo.nombre);\n            },\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 17\n        }, this))\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No tenemos nada\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }, this), listaArchivos.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: listaArchivos.map(archivo => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card border-success mb-3 container container-xs\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header bg-transparent border-success\",\n            children: archivo.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body text-success\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: archivo.tamanio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-footer bg-transparent border-success\",\n            children: \"Footer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }, this))\n      }, void 0, false) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Raiz, \"eBlXLG/GV8Tz3OeFqhM4PfohypA=\");\n\n_c = Raiz;\nexport default Raiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Raiz\");","map":{"version":3,"sources":["C:/Users/salas/Documents/Programacion/SistemasOperativosII/practica_archivos/src/Components/Raiz.js"],"names":["React","useState","useEffect","app","carpetaIcon","Modal","Modal2","Raiz","nUsuario","arregloUsuarios","setArregloUsuarios","memoria","setMemoria","memoria2","setMemoria2","mode","setMode","nBloques","setNBloques","espacios","setEspacios","espacios2","setEspacios2","proceso","setProceso","listaArchivos","setListaArchivos","tamanioXbloque","setTamanioXbloque","console","log","posicionFocus","setPosicionFocus","carpetaFocus","setCarpetaFocus","textoCarpeta","setTextoCarpeta","buscaEspacios","buscaEspacios2","Math","ceil","creaMemoria2","agregaProceso","llenaMemoriaPorByte","nombre","tamanio","arregloAux","map","bit","index","i","contenido","arregloAux2","filter","espacio","undefined","eliminaArchivo","archivo","p","agregaArchivoXbloque","cantidadBloques","irRaiz","bajarCarpeta","length","subirCarpeta","cambiaFocus","carpeta","indice","rutaActual","deleteArchivoXCarpeta","nuevoArray","alert","buscaCarpeta","fichero","justifyContent","display","e","target","value","carpetas"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport app from '../Theme/app.css'\r\nimport carpetaIcon from '../assets/img/carpetaIcon.png'\r\nimport Modal from './Modal'\r\nimport Modal2 from './Modal2'\r\nconst Raiz = ({\r\n    nUsuario,arregloUsuarios,setArregloUsuarios,\r\n    memoria,setMemoria,\r\n    memoria2,setMemoria2,\r\n    mode,setMode,\r\n    nBloques,setNBloques,\r\n    espacios,setEspacios,\r\n    espacios2,setEspacios2,\r\n    proceso,setProceso,\r\n    listaArchivos, setListaArchivos,\r\n    tamanioXbloque,setTamanioXbloque,\r\n}) => {\r\n  console.log('esta es nuestra lista de archivos: ',listaArchivos)\r\n  const [posicionFocus,setPosicionFocus]=useState(0);\r\n  const [carpetaFocus,setCarpetaFocus]=useState(arregloUsuarios['arregloFicheros'][posicionFocus]);\r\n  const [textoCarpeta,setTextoCarpeta]=useState('');\r\n  useEffect(() => {\r\n    //setCarpetaFocus(arregloUsuarios['arregloFicheros'][posicionFocus]);\r\n    console.log('Estamos en: ',carpetaFocus);\r\n    console.log('contenido de carpetas',carpetaFocus)\r\n  }, [posicionFocus,<Raiz/>])\r\n\r\n  useEffect(() => {\r\n    setCarpetaFocus(arregloUsuarios['arregloFicheros'][posicionFocus]);\r\n  }, [posicionFocus])\r\n  \r\n\r\n  useEffect(() => {\r\n    buscaEspacios();\r\n    buscaEspacios2();\r\n    if(nBloques>0){\r\n      setTamanioXbloque(Math.ceil(40/nBloques));\r\n      creaMemoria2();\r\n    }\r\n  },[memoria,nBloques,tamanioXbloque])\r\n  useEffect(() => {\r\n    buscaEspacios2();\r\n  }, [memoria2])\r\n\r\n\r\n  const agregaProceso=()=>{\r\n    buscaEspacios()\r\n    llenaMemoriaPorByte();\r\n    setListaArchivos([...listaArchivos,proceso]);\r\n    //console.log(\"se ha agregado un proceso con exito\");  \r\n    setProceso({nombre:\"\",tamanio:\"\"})\r\n  }\r\n  const llenaMemoriaPorByte=()=>{\r\n      const arregloAux=memoria.map((bit,index)=>{\r\n        for(let i=0;i<proceso.tamanio;i++){\r\n            if(espacios[i]===index){\r\n              return{\r\n                ...bit,\r\n                contenido:proceso.nombre\r\n              }\r\n            }\r\n        }\r\n      return bit;\r\n    });\r\n      setMemoria(arregloAux);\r\n  }\r\n  const buscaEspacios=()=>{\r\n    const arregloAux=memoria.map((bit,index)=>{\r\n        if(bit.contenido===\"\"){\r\n          return index\r\n        }  \r\n    });\r\n    const arregloAux2=arregloAux.filter((espacio)=>espacio!==undefined);\r\n    setEspacios(arregloAux2);\r\n  }\r\n\r\n  const buscaEspacios2=()=>{\r\n    const arregloAux=memoria2.map((bit,index)=>{\r\n        if(bit.contenido===\"\"){\r\n          return index\r\n        }  \r\n    });\r\n    const arregloAux2=arregloAux.filter((espacio)=>espacio!==undefined);\r\n    setEspacios2(arregloAux2);\r\n  }\r\n\r\n  const eliminaArchivo=(archivo)=>{\r\n    //limpiamos la memoria de nuestro espacio\r\n    //console.log(\"este es el archivo a eliminar\",archivo);\r\n    const arregloAux=memoria2.map((bit,index)=>{\r\n        if(archivo===bit.contenido){\r\n            //console.log(\"El archivo se encontro en las siguientes posiciones,:\",index);\r\n            return{\r\n                ...bit,\r\n                contenido:\"\"\r\n            }\r\n        }\r\n        return bit;\r\n    });\r\n    //Eliminamos el proceso de nuestro registro de procesos\r\n    const arregloAux2=listaArchivos.filter((p)=>{\r\n       return p.nombre!==archivo;\r\n    });\r\n    //seteamos estados\r\n  setListaArchivos(arregloAux2);\r\n  setMemoria(arregloAux);\r\n  }\r\n  const creaMemoria2=()=>{\r\n    const arregloAux = memoria.map((bit,index)=>{\r\n      if(index<tamanioXbloque){\r\n        //console.log(\"index: \",index,\"tamanioxbloque: \",tamanioXbloque);\r\n        //console.log(bit)\r\n        return(bit);\r\n      }      \r\n    })\r\n    const arregloAux2 = arregloAux.filter((bit)=> bit!==undefined)\r\n    //console.log(\"Asi queda la memoria aux: \",arregloAux2);\r\n    setMemoria2(arregloAux2);\r\n  }\r\n  const agregaArchivoXbloque=(proceso)=>{\r\n    console.log(\"Este archivo se va agregar: \",proceso);\r\n    let cantidadBloques=proceso.tamanio/nBloques\r\n    console.log(\"El proceso ocupa bloques: \",cantidadBloques);\r\n    const arregloAux=memoria2.map((bit,index)=>{\r\n      for(let i=0;i<cantidadBloques;i++){\r\n          if(espacios2[i]===index){\r\n            return{\r\n              ...bit,\r\n              contenido:proceso.nombre\r\n            }\r\n          }\r\n      }\r\n    return bit;\r\n    });\r\n    setMemoria2(arregloAux);\r\n    setListaArchivos([...listaArchivos,proceso]);\r\n    //console.log(\"se ha agregado un proceso con exito\");  \r\n    setProceso({nombre:\"\",tamanio:\"\"})\r\n  }\r\n  \r\n  const irRaiz=()=>{\r\n    setCarpetaFocus(arregloUsuarios['arregloFicheros'][0]);\r\n  }\r\n  const bajarCarpeta=()=>{\r\n    if(posicionFocus<arregloUsuarios['arregloFicheros'].length-1){\r\n      setPosicionFocus(posicionFocus+1)\r\n    }\r\n  }\r\n  const subirCarpeta=()=>{\r\n    if(posicionFocus>0){\r\n      setPosicionFocus(posicionFocus-1)\r\n    }\r\n  }\r\n  const cambiaFocus=(carpeta)=>{\r\n    let nombre=carpeta.nombre;\r\n    let indice=0;\r\n    console.log('Vamos a entrar a esta carpeta: ',carpeta);\r\n    let rutaActual=arregloUsuarios['arregloFicheros'][posicionFocus];\r\n    rutaActual['carpetas'].map((carpeta,index)=>{\r\n      console.log(carpeta.nombre);\r\n      if(carpeta.nombre===nombre){\r\n        console.log('carpeta encontrada');\r\n        setCarpetaFocus(carpeta)\r\n      }\r\n    });\r\n\r\n    console.log(carpetaFocus);\r\n  }\r\n\r\n  const deleteArchivoXCarpeta=(nombre)=>{\r\n    console.log('Este archivo lo vamos a eliminar: ',nombre);\r\n    console.log(typeof(carpetaFocus['carpetas']));\r\n    const nuevoArray = carpetaFocus['carpetas'].filter((archivo)=> archivo.nombre!==nombre );\r\n    carpetaFocus['carpetas']=nuevoArray;\r\n    eliminaArchivo(nombre)\r\n    alert('Eliminamos un archivo');\r\n  }\r\n  const buscaCarpeta=()=>{\r\n    console.log('Vamos a buscar esta carpeta: ',textoCarpeta);\r\n    console.log(\"Esto tenemos en arregloUsuarios\",arregloUsuarios['arregloFicheros']);\r\n    arregloUsuarios['arregloFicheros'].map((fichero)=>{\r\n      if(fichero.nombre===textoCarpeta){\r\n        console.log('Encontramos la carpeta!!');\r\n        setCarpetaFocus(fichero);\r\n      }\r\n    })\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className='container'>\r\n        <h1>Path: {carpetaFocus.nombre}</h1>\r\n        <hr></hr>\r\n        <div className='container'>\r\n            <div className='container' style={{justifyContent:'space-between',display:'flex'}}>\r\n                <Modal carpetaFocus={carpetaFocus['carpetas']} agregaArchivoXbloque={agregaArchivoXbloque} />\r\n                <br/>\r\n                <Modal2 carpetaFocus={carpetaFocus['carpetas']}/>\r\n                <form className=\"d-flex\">\r\n                  <input className=\"form-control me-2\" type=\"search\" onChange={(e)=>{setTextoCarpeta(e.target.value)}}/>\r\n                  <button className=\"btn btn-outline-success\" type=\"button\" onClick={()=>{buscaCarpeta()}}>Buscar</button>\r\n                </form>\r\n                <input type='button' className='btn3' onClick={()=>bajarCarpeta()}/>\r\n                <input type='button' className='btn2' onClick={()=>subirCarpeta()}/>\r\n                <input type='button' className='btn4' onClick={()=>irRaiz()}/>    \r\n            </div>\r\n            <hr/>\r\n              {carpetaFocus.carpetas.length>0\r\n              ?<>\r\n                {carpetaFocus.carpetas.map((archivo)=>(\r\n                  \r\n                <div className='container' style={{display:'flex'}}>\r\n                  {archivo['carpetas']\r\n                  ?<h5>Directorio:{archivo.nombre} <button type=\"button\" className=\"btn btn-info\" onClick={()=>{cambiaFocus(archivo)}} >entrar</button></h5>\r\n                  \r\n                  :<h5>Archivo:{archivo.nombre} |<span> tamanio:{archivo.tamanio}</span> |<span>ubicacion: {carpetaFocus.nombre}</span> </h5>}\r\n                  <button type=\"button\" className=\"btn btn-danger\" onClick={()=>{deleteArchivoXCarpeta(archivo.nombre)}}>X</button>\r\n                </div>\r\n                ))}\r\n              </>\r\n              :<h3>No tenemos nada</h3>\r\n              }\r\n            <hr/>\r\n            {listaArchivos.length>0\r\n            ?<>\r\n              {listaArchivos.map((archivo)=>(\r\n                <div className=\"card border-success mb-3 container container-xs\">\r\n                  <div className=\"card-header bg-transparent border-success\">{archivo.nombre}</div>\r\n                    <div className=\"card-body text-success\">\r\n                      <h5 className=\"card-title\">{archivo.tamanio}</h5>\r\n                  </div>\r\n                  <div className=\"card-footer bg-transparent border-success\">Footer</div>\r\n                </div>\r\n              ))}\r\n            </>\r\n            :null\r\n            }\r\n        </div>\r\n    </div>\r\n  ) \r\n}\r\n\r\nexport default Raiz"]},"metadata":{},"sourceType":"module"}