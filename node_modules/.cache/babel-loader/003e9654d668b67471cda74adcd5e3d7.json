{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salas\\\\Documents\\\\Programacion\\\\SistemasOperativosII\\\\practica_archivos\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { mapa } from \"./ArregloMapa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [memoria, setMemoria] = useState(mapa);\n  const [mode, setMode] = useState(\"\");\n  const [nBloques, setNBloques] = useState(0);\n  const [proceso, setProceso] = useState({\n    nombre: \"\",\n    tamanio: 0\n  });\n  const [listaProcesos, setListaProcesos] = useState([]);\n  const [espacios, setEspacios] = useState([]);\n  useEffect(() => {\n    buscaEspacios();\n  }, [memoria]);\n  console.log(mode);\n  console.log(\"Este es tu proceso actual: \", proceso);\n  console.log(\"Este es tu lista de procesos actual: \", listaProcesos);\n  console.log(\"Estos son tus espacios disponibles\", espacios);\n\n  const agregaProceso = () => {\n    llenaMemoriaPorByte();\n    setListaProcesos([...listaProcesos, proceso]);\n    console.log(\"se ha agregado un proceso con exito\");\n    setProceso({\n      nombre: \"\",\n      tamanio: \"\"\n    });\n  };\n\n  const llenaMemoriaPorByte = () => {\n    if (espacios.length > 0) {\n      const arregloAux = memoria.map((bit, index) => {\n        for (let i = 0; i < proceso.tamanio; i++) {\n          if (espacios[i] === index && espacios[i] != undefined) {\n            return { ...bit,\n              contenido: proceso.nombre\n            };\n          }\n        }\n\n        return bit;\n      });\n      setMemoria(arregloAux);\n    }\n  };\n\n  function buscaEspacios() {\n    const arregloAux = memoria.map((bit, index) => {\n      if (bit.contenido === \"\") {\n        return index;\n      }\n    });\n    setEspacios(arregloAux);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Memoria\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: memoria.map((bit, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: bit.posicion\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: memoria.map((bit, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: bit.contenido\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Formulario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-select\",\n          defaultValue: \"\",\n          onChange: e => {\n            setMode(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"--Selecione--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"byte\",\n            children: \"Por Byte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"bloque\",\n            children: \"Por Bloque\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: mode === \"byte\" ?\n          /*#__PURE__*/\n\n          /*por byte*/\n          _jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Modo: \", mode]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Crea un archivo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Nombre del archivo \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: proceso.nombre,\n                onChange: e => {\n                  setProceso({ ...proceso,\n                    nombre: e.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Tamanio del archivo \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: proceso.tamanio,\n                onChange: e => {\n                  setProceso({ ...proceso,\n                    tamanio: parseInt(e.target.value)\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-primary\",\n                onClick: agregaProceso,\n                children: \"Crear Proceso\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n          /*por Bloque*/\n          : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Modo: \", mode]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xMeZd7bajLyVThVYf+TPpPEedE8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/salas/Documents/Programacion/SistemasOperativosII/practica_archivos/src/App.js"],"names":["useState","useEffect","mapa","App","memoria","setMemoria","mode","setMode","nBloques","setNBloques","proceso","setProceso","nombre","tamanio","listaProcesos","setListaProcesos","espacios","setEspacios","buscaEspacios","console","log","agregaProceso","llenaMemoriaPorByte","length","arregloAux","map","bit","index","i","undefined","contenido","posicion","e","target","value","parseInt"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useState,useEffect} from 'react';\nimport {mapa} from \"./ArregloMapa\"\n\nfunction App() {\n  const [memoria,setMemoria]=useState(mapa);\n  const [mode,setMode]=useState(\"\");\n  const [nBloques,setNBloques]=useState(0);\n  const [proceso,setProceso]=useState({\n    nombre:\"\",\n    tamanio:0\n  });\n  const [listaProcesos, setListaProcesos]=useState([]);\n\n  const [espacios,setEspacios]=useState([]);\n\n  useEffect(() => {\n    buscaEspacios();\n  },[memoria])\n  \n\n  console.log(mode);\n  console.log(\"Este es tu proceso actual: \",proceso);\n  console.log(\"Este es tu lista de procesos actual: \",listaProcesos);\n  console.log(\"Estos son tus espacios disponibles\",espacios);\n  \n  const agregaProceso=()=>{\n    llenaMemoriaPorByte();\n    setListaProcesos([...listaProcesos,proceso]);\n    console.log(\"se ha agregado un proceso con exito\");  \n    setProceso({nombre:\"\",tamanio:\"\"})\n  }\n  const llenaMemoriaPorByte=()=>{\n    if(espacios.length>0){\n      const arregloAux=memoria.map((bit,index)=>{\n        for(let i=0;i<proceso.tamanio;i++){\n            if(espacios[i]===index && espacios[i]!=undefined){\n                return{\n                    ...bit,\n                    contenido:proceso.nombre\n                }\n            }\n        }\n        return bit;\n    });\n      setMemoria(arregloAux);\n    }\n  }\n  function buscaEspacios(){\n    const arregloAux=memoria.map((bit,index)=>{\n      if(bit.contenido===\"\"){\n          return index \n      }\n    });\n    setEspacios(arregloAux);\n  }\n\n  return (\n    <div>\n      \n      {/*Memoria*/}\n      <div className='container'>\n        <h1>Memoria</h1>\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n            {memoria.map((bit,i)=>(\n              <th key ={i} scope=\"col\">{bit.posicion}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n            {memoria.map((bit,i)=>(\n              <th key ={i} scope=\"col\">{bit.contenido}</th>\n              ))}\n            </tr>\n          </tbody>\n        </table>\n        {/*------Formulario*/}\n        <h1>Formulario</h1>\n        <div className='container'> \n          <select className=\"form-select\" defaultValue=\"\"  onChange={(e)=>{setMode(e.target.value)}}>\n            <option value=\"\" disabled>--Selecione--</option>\n            <option value=\"byte\" >Por Byte</option>\n            <option value=\"bloque\">Por Bloque</option>\n          </select>\n          <div className='container'>\n            {mode===\"byte\"? \n            /*por byte*/\n              <div>\n                <h3>Modo: {mode}</h3>\n                <h3>Crea un archivo</h3>\n                <br/>\n                <form>\n                  <label>Nombre del archivo </label>\n                  <input \n                    type=\"text\"\n                    value={proceso.nombre}\n                    onChange={(e)=>{setProceso({...proceso,nombre:e.target.value})}}\n                  />\n                  <br/>\n                  <br/>\n                  <label>Tamanio del archivo </label>\n                  <input \n                    type=\"number\"\n                    value={proceso.tamanio}\n                    onChange={(e)=>{setProceso({...proceso,tamanio:parseInt(e.target.value)})}}\n                    />\n                    <br/>\n                    <br/>\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={agregaProceso} >Crear Proceso</button>\n                </form>\n              </div>\n            /*por Bloque*/\n            :<div>\n                <h2>Modo: {mode}</h2>\n            </div>\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}