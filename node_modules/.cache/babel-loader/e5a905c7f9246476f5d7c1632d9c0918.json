{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salas\\\\Documents\\\\Programacion\\\\SistemasOperativosII\\\\practica_archivos\\\\src\\\\Components\\\\Raiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport app from '../Theme/app.css';\nimport carpetaIcon from '../assets/img/carpetaIcon.png';\nimport Modal from './Modal';\nimport Modal2 from './Modal2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Raiz = _ref => {\n  _s();\n\n  let {\n    nUsuario,\n    arregloUsuarios,\n    setArregloUsuarios,\n    memoria,\n    setMemoria,\n    memoria2,\n    setMemoria2,\n    mode,\n    setMode,\n    nBloques,\n    setNBloques,\n    espacios,\n    setEspacios,\n    espacios2,\n    setEspacios2,\n    proceso,\n    setProceso,\n    listaArchivos,\n    setListaArchivos,\n    tamanioXbloque,\n    setTamanioXbloque\n  } = _ref;\n  const [posicionFocus, setPosicionFocus] = useState(0);\n  const [carpetaFocus, setCarpetaFocus] = useState(arregloUsuarios['arregloFicheros'][posicionFocus]);\n  useEffect(() => {\n    setCarpetaFocus(arregloUsuarios['arregloFicheros'][posicionFocus]);\n    console.log('Estamos en: ', carpetaFocus);\n    console.log(\"Esto tenemos en estas carpetas: \", carpetaFocus['carpetas'].length);\n  }, [posicionFocus]);\n  useEffect(() => {\n    buscaEspacios();\n    buscaEspacios2();\n\n    if (nBloques > 0) {\n      setTamanioXbloque(Math.ceil(40 / nBloques));\n      creaMemoria2();\n    }\n  }, [memoria, nBloques, tamanioXbloque]);\n  useEffect(() => {\n    buscaEspacios2();\n  }, [memoria2]);\n\n  const agregaProceso = () => {\n    buscaEspacios();\n    llenaMemoriaPorByte();\n    setListaArchivos([...listaArchivos, proceso]); //console.log(\"se ha agregado un proceso con exito\");  \n\n    setProceso({\n      nombre: \"\",\n      tamanio: \"\"\n    });\n  };\n\n  const llenaMemoriaPorByte = () => {\n    const arregloAux = memoria.map((bit, index) => {\n      for (let i = 0; i < proceso.tamanio; i++) {\n        if (espacios[i] === index) {\n          return { ...bit,\n            contenido: proceso.nombre\n          };\n        }\n      }\n\n      return bit;\n    });\n    setMemoria(arregloAux);\n  };\n\n  const buscaEspacios = () => {\n    const arregloAux = memoria.map((bit, index) => {\n      if (bit.contenido === \"\") {\n        return index;\n      }\n    });\n    const arregloAux2 = arregloAux.filter(espacio => espacio !== undefined);\n    setEspacios(arregloAux2);\n  };\n\n  const buscaEspacios2 = () => {\n    const arregloAux = memoria2.map((bit, index) => {\n      if (bit.contenido === \"\") {\n        return index;\n      }\n    });\n    const arregloAux2 = arregloAux.filter(espacio => espacio !== undefined);\n    setEspacios2(arregloAux2);\n  };\n\n  const eliminaArchivo = archivo => {\n    //limpiamos la memoria de nuestro espacio\n    //console.log(\"este es el archivo a eliminar\",archivo);\n    const arregloAux = memoria.map((bit, index) => {\n      if (archivo === bit.contenido) {\n        //console.log(\"El archivo se encontro en las siguientes posiciones,:\",index);\n        return { ...bit,\n          contenido: \"\"\n        };\n      }\n\n      return bit;\n    }); //Eliminamos el proceso de nuestro registro de procesos\n\n    const arregloAux2 = listaArchivos.filter(p => {\n      return p.nombre !== archivo;\n    }); //seteamos estados\n\n    setListaArchivos(arregloAux2);\n    setMemoria(arregloAux);\n  };\n\n  const creaMemoria2 = () => {\n    const arregloAux = memoria.map((bit, index) => {\n      if (index < tamanioXbloque) {\n        //console.log(\"index: \",index,\"tamanioxbloque: \",tamanioXbloque);\n        //console.log(bit)\n        return bit;\n      }\n    });\n    const arregloAux2 = arregloAux.filter(bit => bit !== undefined); //console.log(\"Asi queda la memoria aux: \",arregloAux2);\n\n    setMemoria2(arregloAux2);\n  };\n\n  const agregaArchivoXbloque = () => {\n    console.log(\"Este archivo se va agregar: \", proceso);\n    let cantidadBloques = proceso.tamanio / nBloques;\n    console.log(\"El proceso ocupa bloques: \", cantidadBloques);\n    const arregloAux = memoria2.map((bit, index) => {\n      for (let i = 0; i < cantidadBloques; i++) {\n        if (espacios2[i] === index) {\n          return { ...bit,\n            contenido: proceso.nombre\n          };\n        }\n      }\n\n      return bit;\n    });\n    setMemoria2(arregloAux);\n    setListaArchivos([...listaArchivos, proceso]); //console.log(\"se ha agregado un proceso con exito\");  \n\n    setProceso({\n      nombre: \"\",\n      tamanio: \"\"\n    });\n  };\n\n  const bajarCarpeta = () => {\n    if (posicionFocus < arregloUsuarios['arregloFicheros'].length - 1) {\n      setPosicionFocus(posicionFocus + 1);\n    }\n  };\n\n  const subirCarpeta = () => {\n    if (posicionFocus > 0) {\n      setPosicionFocus(posicionFocus - 1);\n    }\n  };\n\n  const crearArchivo = () => {};\n\n  const crearCarpeta = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Paht: \", carpetaFocus.nombre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          justifyContent: 'space-between',\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Modal, {\n          carpetaFocus: carpetaFocus['carpetas']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal2, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control me-2\",\n            type: \"search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-success\",\n            type: \"submit\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          className: \"btn3\",\n          onClick: () => bajarCarpeta()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          className: \"btn2\",\n          onClick: () => subirCarpeta()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Estamos en: \", carpetaFocus['nombre']]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Raiz, \"6vTXev9SqyqbaxXoqkYEyw2ybiU=\");\n\n_c = Raiz;\nexport default Raiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Raiz\");","map":{"version":3,"sources":["C:/Users/salas/Documents/Programacion/SistemasOperativosII/practica_archivos/src/Components/Raiz.js"],"names":["React","useState","useEffect","app","carpetaIcon","Modal","Modal2","Raiz","nUsuario","arregloUsuarios","setArregloUsuarios","memoria","setMemoria","memoria2","setMemoria2","mode","setMode","nBloques","setNBloques","espacios","setEspacios","espacios2","setEspacios2","proceso","setProceso","listaArchivos","setListaArchivos","tamanioXbloque","setTamanioXbloque","posicionFocus","setPosicionFocus","carpetaFocus","setCarpetaFocus","console","log","length","buscaEspacios","buscaEspacios2","Math","ceil","creaMemoria2","agregaProceso","llenaMemoriaPorByte","nombre","tamanio","arregloAux","map","bit","index","i","contenido","arregloAux2","filter","espacio","undefined","eliminaArchivo","archivo","p","agregaArchivoXbloque","cantidadBloques","bajarCarpeta","subirCarpeta","crearArchivo","crearCarpeta","justifyContent","display"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport app from '../Theme/app.css'\r\nimport carpetaIcon from '../assets/img/carpetaIcon.png'\r\nimport Modal from './Modal'\r\nimport Modal2 from './Modal2'\r\nconst Raiz = ({\r\n    nUsuario,arregloUsuarios,setArregloUsuarios,\r\n    memoria,setMemoria,\r\n    memoria2,setMemoria2,\r\n    mode,setMode,\r\n    nBloques,setNBloques,\r\n    espacios,setEspacios,\r\n    espacios2,setEspacios2,\r\n    proceso,setProceso,\r\n    listaArchivos, setListaArchivos,\r\n    tamanioXbloque,setTamanioXbloque,\r\n}) => {\r\n\r\n  const [posicionFocus,setPosicionFocus]=useState(0);\r\n  const [carpetaFocus,setCarpetaFocus]=useState(arregloUsuarios['arregloFicheros'][posicionFocus]);\r\n\r\n  useEffect(() => {\r\n    setCarpetaFocus(arregloUsuarios['arregloFicheros'][posicionFocus]);\r\n    console.log('Estamos en: ',carpetaFocus);\r\n    console.log(\"Esto tenemos en estas carpetas: \",carpetaFocus['carpetas'].length);\r\n  }, [posicionFocus])\r\n  useEffect(() => {\r\n    buscaEspacios();\r\n    buscaEspacios2();\r\n    if(nBloques>0){\r\n      setTamanioXbloque(Math.ceil(40/nBloques));\r\n      creaMemoria2();\r\n    }\r\n  },[memoria,nBloques,tamanioXbloque])\r\n  useEffect(() => {\r\n    buscaEspacios2();\r\n  }, [memoria2])\r\n\r\n\r\n  const agregaProceso=()=>{\r\n    buscaEspacios()\r\n    llenaMemoriaPorByte();\r\n    setListaArchivos([...listaArchivos,proceso]);\r\n    //console.log(\"se ha agregado un proceso con exito\");  \r\n    setProceso({nombre:\"\",tamanio:\"\"})\r\n  }\r\n  const llenaMemoriaPorByte=()=>{\r\n      const arregloAux=memoria.map((bit,index)=>{\r\n        for(let i=0;i<proceso.tamanio;i++){\r\n            if(espacios[i]===index){\r\n              return{\r\n                ...bit,\r\n                contenido:proceso.nombre\r\n              }\r\n            }\r\n        }\r\n      return bit;\r\n    });\r\n      setMemoria(arregloAux);\r\n  }\r\n  const buscaEspacios=()=>{\r\n    const arregloAux=memoria.map((bit,index)=>{\r\n        if(bit.contenido===\"\"){\r\n          return index\r\n        }  \r\n    });\r\n    const arregloAux2=arregloAux.filter((espacio)=>espacio!==undefined);\r\n    setEspacios(arregloAux2);\r\n  }\r\n\r\n  const buscaEspacios2=()=>{\r\n    const arregloAux=memoria2.map((bit,index)=>{\r\n        if(bit.contenido===\"\"){\r\n          return index\r\n        }  \r\n    });\r\n    const arregloAux2=arregloAux.filter((espacio)=>espacio!==undefined);\r\n    setEspacios2(arregloAux2);\r\n  }\r\n\r\n  const eliminaArchivo=(archivo)=>{\r\n    //limpiamos la memoria de nuestro espacio\r\n    //console.log(\"este es el archivo a eliminar\",archivo);\r\n    const arregloAux=memoria.map((bit,index)=>{\r\n        if(archivo===bit.contenido){\r\n            //console.log(\"El archivo se encontro en las siguientes posiciones,:\",index);\r\n            return{\r\n                ...bit,\r\n                contenido:\"\"\r\n            }\r\n        }\r\n        return bit;\r\n    });\r\n    //Eliminamos el proceso de nuestro registro de procesos\r\n    const arregloAux2=listaArchivos.filter((p)=>{\r\n       return p.nombre!==archivo;\r\n    });\r\n    //seteamos estados\r\n  setListaArchivos(arregloAux2);\r\n  setMemoria(arregloAux);\r\n  }\r\n  const creaMemoria2=()=>{\r\n    const arregloAux = memoria.map((bit,index)=>{\r\n      if(index<tamanioXbloque){\r\n        //console.log(\"index: \",index,\"tamanioxbloque: \",tamanioXbloque);\r\n        //console.log(bit)\r\n        return(bit);\r\n      }      \r\n    })\r\n    const arregloAux2 = arregloAux.filter((bit)=> bit!==undefined)\r\n    //console.log(\"Asi queda la memoria aux: \",arregloAux2);\r\n    setMemoria2(arregloAux2);\r\n  }\r\n  const agregaArchivoXbloque=()=>{\r\n    console.log(\"Este archivo se va agregar: \",proceso);\r\n    let cantidadBloques=proceso.tamanio/nBloques\r\n    console.log(\"El proceso ocupa bloques: \",cantidadBloques);\r\n    const arregloAux=memoria2.map((bit,index)=>{\r\n      for(let i=0;i<cantidadBloques;i++){\r\n          if(espacios2[i]===index){\r\n            return{\r\n              ...bit,\r\n              contenido:proceso.nombre\r\n            }\r\n          }\r\n      }\r\n    return bit;\r\n    });\r\n    setMemoria2(arregloAux);\r\n    setListaArchivos([...listaArchivos,proceso]);\r\n    //console.log(\"se ha agregado un proceso con exito\");  \r\n    setProceso({nombre:\"\",tamanio:\"\"})\r\n  }\r\n  \r\n  const bajarCarpeta=()=>{\r\n    if(posicionFocus<arregloUsuarios['arregloFicheros'].length-1){\r\n      setPosicionFocus(posicionFocus+1)\r\n    }\r\n  }\r\n  const subirCarpeta=()=>{\r\n    if(posicionFocus>0){\r\n      setPosicionFocus(posicionFocus-1)\r\n    }\r\n  }\r\n\r\n  const crearArchivo=()=>{\r\n    \r\n  }\r\n  const crearCarpeta=()=>{\r\n\r\n  }\r\n\r\n  return (\r\n    <div className='container'>\r\n        <h1>Paht: {carpetaFocus.nombre}</h1>\r\n        <hr></hr>\r\n        <div className='container'>\r\n            <div className='container' style={{justifyContent:'space-between',display:'flex'}}>\r\n                <Modal carpetaFocus={carpetaFocus['carpetas']}/>\r\n                <br/>\r\n                <Modal2/>\r\n                <form className=\"d-flex\">\r\n                  <input className=\"form-control me-2\" type=\"search\"/>\r\n                  <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                </form>\r\n                <input type='button' className='btn3' onClick={()=>bajarCarpeta()}/>\r\n                <input type='button' className='btn2' onClick={()=>subirCarpeta()}/>    \r\n            </div>\r\n            <hr/>\r\n            <h2>Estamos en: {carpetaFocus['nombre']}</h2>\r\n            \r\n            <hr/>\r\n\r\n        </div>\r\n    </div>\r\n  ) \r\n}\r\n\r\nexport default Raiz"]},"metadata":{},"sourceType":"module"}