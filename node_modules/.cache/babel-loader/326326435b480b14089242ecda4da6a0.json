{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salas\\\\Documents\\\\Programacion\\\\SistemasOperativosII\\\\practica_archivos\\\\src\\\\Components\\\\TipoAlmacenamiento.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { mapa } from \"./ArregloMapa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TipoAlmacenamiento() {\n  _s();\n\n  const [memoria, setMemoria] = useState(mapa);\n  const [memoria2, setMemoria2] = useState([]);\n  const [mode, setMode] = useState(\"\");\n  const [nBloques, setNBloques] = useState(0);\n  const [espacios, setEspacios] = useState([]);\n  const [espacios2, setEspacios2] = useState([]);\n  const [proceso, setProceso] = useState({\n    nombre: \"\",\n    tamanio: 0\n  });\n  const [listaArchivos, setListaArchivos] = useState([]);\n  const [tamanioXbloque, setTamanioXbloque] = useState(0);\n  useEffect(() => {\n    buscaEspacios();\n    buscaEspacios2();\n\n    if (nBloques > 0) {\n      setTamanioXbloque(Math.ceil(40 / nBloques));\n      creaMemoria2();\n    }\n  }, [memoria, nBloques, tamanioXbloque]);\n  useEffect(() => {\n    buscaEspacios2();\n  }, [memoria2]); //console.log(mode);\n  // console.log(\"Esta es tu memoria: \", memoria);\n  // console.log(\"Este es tu lista de procesos actual: \",listaArchivos);\n  // console.log(\"Estos son tus espacios disponibles\",espacios);\n  // console.log(espacios.length);\n\n  console.log(\"Espacios2: \", espacios2);\n  console.log(\"El tamanio por bloque sera: \", tamanioXbloque);\n  console.log(\"Esta nuestra memoria 2: \", memoria2);\n\n  const agregaProceso = () => {\n    buscaEspacios();\n    llenaMemoriaPorByte();\n    setListaArchivos([...listaArchivos, proceso]); //console.log(\"se ha agregado un proceso con exito\");  \n\n    setProceso({\n      nombre: \"\",\n      tamanio: \"\"\n    });\n  };\n\n  const llenaMemoriaPorByte = () => {\n    const arregloAux = memoria.map((bit, index) => {\n      for (let i = 0; i < proceso.tamanio; i++) {\n        if (espacios[i] === index) {\n          return { ...bit,\n            contenido: proceso.nombre\n          };\n        }\n      }\n\n      return bit;\n    });\n    setMemoria(arregloAux);\n  };\n\n  const buscaEspacios = () => {\n    const arregloAux = memoria.map((bit, index) => {\n      if (bit.contenido === \"\") {\n        return index;\n      }\n    });\n    const arregloAux2 = arregloAux.filter(espacio => espacio !== undefined);\n    setEspacios(arregloAux2);\n  };\n\n  const buscaEspacios2 = () => {\n    const arregloAux = memoria2.map((bit, index) => {\n      if (bit.contenido === \"\") {\n        return index;\n      }\n    });\n    const arregloAux2 = arregloAux.filter(espacio => espacio !== undefined);\n    setEspacios2(arregloAux2);\n  };\n\n  const eliminaArchivo = archivo => {\n    //limpiamos la memoria de nuestro espacio\n    //console.log(\"este es el archivo a eliminar\",archivo);\n    const arregloAux = memoria.map((bit, index) => {\n      if (archivo === bit.contenido) {\n        //console.log(\"El archivo se encontro en las siguientes posiciones,:\",index);\n        return { ...bit,\n          contenido: \"\"\n        };\n      }\n\n      return bit;\n    }); //Eliminamos el proceso de nuestro registro de procesos\n\n    const arregloAux2 = listaArchivos.filter(p => {\n      return p.nombre !== archivo;\n    }); //seteamos estados\n\n    setListaArchivos(arregloAux2);\n    setMemoria(arregloAux);\n  };\n\n  const creaMemoria2 = () => {\n    const arregloAux = memoria.map((bit, index) => {\n      if (index < tamanioXbloque) {\n        //console.log(\"index: \",index,\"tamanioxbloque: \",tamanioXbloque);\n        //console.log(bit)\n        return bit;\n      }\n    });\n    const arregloAux2 = arregloAux.filter(bit => bit !== undefined); //console.log(\"Asi queda la memoria aux: \",arregloAux2);\n\n    setMemoria2(arregloAux2);\n  };\n\n  const agregaArchivoXbloque = () => {\n    console.log(\"Este archivo se va agregar: \", proceso);\n    let cantidadBloques = proceso.tamanio / nBloques;\n    console.log(\"El proceso ocupa bloques: \", cantidadBloques);\n    const arregloAux = memoria2.map((bit, index) => {\n      for (let i = 0; i < cantidadBloques; i++) {\n        if (espacios2[i] === index) {\n          return { ...bit,\n            contenido: proceso.nombre\n          };\n        }\n      }\n\n      return bit;\n    });\n    setMemoria2(arregloAux);\n    setListaArchivos([...listaArchivos, proceso]); //console.log(\"se ha agregado un proceso con exito\");  \n\n    setProceso({\n      nombre: \"\",\n      tamanio: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [mode === \"byte\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Memoria\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: memoria.map((bit, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: bit.posicion\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: memoria.map((bit, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: bit.contenido\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Memoria\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: memoria2.map((bit, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: bit.posicion\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: memoria2.map((bit, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: bit.contenido\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select\",\n        defaultValue: \"\",\n        onChange: e => {\n          setMode(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"--Selecione--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"byte\",\n          children: \"Por Byte\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"bloque\",\n          children: \"Por Bloque\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: mode === \"byte\" ?\n        /*#__PURE__*/\n\n        /*por byte*/\n        _jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Modo: \", mode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Crea un archivo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Nombre del archivo \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: proceso.nombre,\n              onChange: e => {\n                setProceso({ ...proceso,\n                  nombre: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Tamanio del archivo \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: proceso.tamanio,\n              onChange: e => {\n                setProceso({ ...proceso,\n                  tamanio: parseInt(e.target.value)\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              onClick: agregaProceso,\n              children: \"Crear Archivo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Lista de Archivos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"d-flex\",\n              children: listaArchivos.map(archi => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card border-success m-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header bg-transparent border-success\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: archi.nombre\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body text-success\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title\",\n                    children: archi.tamanio\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-footer bg-transparent border-success\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-danger\",\n                    onClick: () => {\n                      eliminaArchivo(archi.nombre);\n                    },\n                    children: \"x\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, this)\n        /*por Bloque*/\n        : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Modo: \", mode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this), nBloques === 0 && mode === \"bloque\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Ingresa tamanio x bloque\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-select\",\n              defaultValue: \"\",\n              onChange: e => {\n                setNBloques(parseInt(e.target.value));\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"--Selecione--\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"4\",\n                children: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"5\",\n                children: \"5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"6\",\n                children: \"6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"7\",\n                children: \"7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"8\",\n                children: \"8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"9\",\n                children: \"9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"10\",\n                children: \"10\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"11\",\n                children: \"11\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"12\",\n                children: \"12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"13\",\n                children: \"13\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"14\",\n                children: \"14\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"15\",\n                children: \"15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"16\",\n                children: \"16\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"17\",\n                children: \"17\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"18\",\n                children: \"18\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"19\",\n                children: \"19\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"20\",\n                children: \"20\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Tamanio x Bloque: \", nBloques]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Nombre del archivo \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: proceso.nombre,\n                onChange: e => {\n                  setProceso({ ...proceso,\n                    nombre: e.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Tamanio del archivo \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: proceso.tamanio,\n                onChange: e => {\n                  setProceso({ ...proceso,\n                    tamanio: parseInt(e.target.value)\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-primary\",\n                onClick: agregaArchivoXbloque,\n                children: \"Crear Archivo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Lista de Archivos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"d-flex\",\n                children: listaArchivos.map(archi => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card border-success m-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-header bg-transparent border-success\",\n                    children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                      children: archi.nombre\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 297,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-body text-success\",\n                    children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                      className: \"card-title\",\n                      children: archi.tamanio\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-footer bg-transparent border-success\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"btn btn-danger\",\n                      onClick: () => {\n                        eliminaArchivo(archi.nombre);\n                      },\n                      children: \"x\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 303,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TipoAlmacenamiento, \"LD3bgGjIEIsWNTddKlAsQ+wWhKY=\");\n\n_c = TipoAlmacenamiento;\nexport default TipoAlmacenamiento;\n\nvar _c;\n\n$RefreshReg$(_c, \"TipoAlmacenamiento\");","map":{"version":3,"sources":["C:/Users/salas/Documents/Programacion/SistemasOperativosII/practica_archivos/src/Components/TipoAlmacenamiento.js"],"names":["React","useState","useEffect","mapa","TipoAlmacenamiento","memoria","setMemoria","memoria2","setMemoria2","mode","setMode","nBloques","setNBloques","espacios","setEspacios","espacios2","setEspacios2","proceso","setProceso","nombre","tamanio","listaArchivos","setListaArchivos","tamanioXbloque","setTamanioXbloque","buscaEspacios","buscaEspacios2","Math","ceil","creaMemoria2","console","log","agregaProceso","llenaMemoriaPorByte","arregloAux","map","bit","index","i","contenido","arregloAux2","filter","espacio","undefined","eliminaArchivo","archivo","p","agregaArchivoXbloque","cantidadBloques","posicion","e","target","value","parseInt","archi"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useState,useEffect} from 'react';\r\nimport {mapa} from \"./ArregloMapa\"\r\n\r\nfunction TipoAlmacenamiento() {\r\n  const [memoria,setMemoria]=useState(mapa);\r\n  const [memoria2,setMemoria2]=useState([]);\r\n  const [mode,setMode]=useState(\"\");\r\n  const [nBloques,setNBloques]=useState(0);\r\n  const [espacios,setEspacios]=useState([]);\r\n  const [espacios2,setEspacios2]=useState([]);\r\n  const [proceso,setProceso]=useState({\r\n    nombre:\"\",\r\n    tamanio:0\r\n  });\r\n  const [listaArchivos, setListaArchivos]=useState([]);\r\n  const [tamanioXbloque,setTamanioXbloque]=useState(0);\r\n\r\n  useEffect(() => {\r\n    buscaEspacios();\r\n    buscaEspacios2();\r\n    if(nBloques>0){\r\n      setTamanioXbloque(Math.ceil(40/nBloques));\r\n      creaMemoria2();\r\n    }\r\n  },[memoria,nBloques,tamanioXbloque])\r\n  useEffect(() => {\r\n    buscaEspacios2();\r\n  }, [memoria2])\r\n  \r\n  \r\n  //console.log(mode);\r\n  // console.log(\"Esta es tu memoria: \", memoria);\r\n  // console.log(\"Este es tu lista de procesos actual: \",listaArchivos);\r\n  // console.log(\"Estos son tus espacios disponibles\",espacios);\r\n  // console.log(espacios.length);\r\n  console.log(\"Espacios2: \",espacios2);\r\n  console.log(\"El tamanio por bloque sera: \",tamanioXbloque);\r\n  console.log(\"Esta nuestra memoria 2: \",memoria2);\r\n  const agregaProceso=()=>{\r\n    buscaEspacios()\r\n    llenaMemoriaPorByte();\r\n    setListaArchivos([...listaArchivos,proceso]);\r\n    //console.log(\"se ha agregado un proceso con exito\");  \r\n    setProceso({nombre:\"\",tamanio:\"\"})\r\n  }\r\n  const llenaMemoriaPorByte=()=>{\r\n      const arregloAux=memoria.map((bit,index)=>{\r\n        for(let i=0;i<proceso.tamanio;i++){\r\n            if(espacios[i]===index){\r\n              return{\r\n                ...bit,\r\n                contenido:proceso.nombre\r\n              }\r\n            }\r\n        }\r\n      return bit;\r\n    });\r\n      setMemoria(arregloAux);\r\n  }\r\n  const buscaEspacios=()=>{\r\n    const arregloAux=memoria.map((bit,index)=>{\r\n        if(bit.contenido===\"\"){\r\n          return index\r\n        }  \r\n    });\r\n    const arregloAux2=arregloAux.filter((espacio)=>espacio!==undefined);\r\n    setEspacios(arregloAux2);\r\n  }\r\n\r\n  const buscaEspacios2=()=>{\r\n    const arregloAux=memoria2.map((bit,index)=>{\r\n        if(bit.contenido===\"\"){\r\n          return index\r\n        }  \r\n    });\r\n    const arregloAux2=arregloAux.filter((espacio)=>espacio!==undefined);\r\n    setEspacios2(arregloAux2);\r\n  }\r\n\r\n  const eliminaArchivo=(archivo)=>{\r\n    //limpiamos la memoria de nuestro espacio\r\n    //console.log(\"este es el archivo a eliminar\",archivo);\r\n    const arregloAux=memoria.map((bit,index)=>{\r\n        if(archivo===bit.contenido){\r\n            //console.log(\"El archivo se encontro en las siguientes posiciones,:\",index);\r\n            return{\r\n                ...bit,\r\n                contenido:\"\"\r\n            }\r\n        }\r\n        return bit;\r\n    });\r\n    //Eliminamos el proceso de nuestro registro de procesos\r\n    const arregloAux2=listaArchivos.filter((p)=>{\r\n       return p.nombre!==archivo;\r\n    });\r\n    //seteamos estados\r\n  setListaArchivos(arregloAux2);\r\n  setMemoria(arregloAux);\r\n  }\r\n  const creaMemoria2=()=>{\r\n    const arregloAux = memoria.map((bit,index)=>{\r\n      if(index<tamanioXbloque){\r\n        //console.log(\"index: \",index,\"tamanioxbloque: \",tamanioXbloque);\r\n        //console.log(bit)\r\n        return(bit);\r\n      }      \r\n    })\r\n    const arregloAux2 = arregloAux.filter((bit)=> bit!==undefined)\r\n    //console.log(\"Asi queda la memoria aux: \",arregloAux2);\r\n    setMemoria2(arregloAux2);\r\n  }\r\n  const agregaArchivoXbloque=()=>{\r\n    console.log(\"Este archivo se va agregar: \",proceso);\r\n    let cantidadBloques=proceso.tamanio/nBloques\r\n    console.log(\"El proceso ocupa bloques: \",cantidadBloques);\r\n    const arregloAux=memoria2.map((bit,index)=>{\r\n      for(let i=0;i<cantidadBloques;i++){\r\n          if(espacios2[i]===index){\r\n            return{\r\n              ...bit,\r\n              contenido:proceso.nombre\r\n            }\r\n          }\r\n      }\r\n    return bit;\r\n    });\r\n    setMemoria2(arregloAux);\r\n    setListaArchivos([...listaArchivos,proceso]);\r\n    //console.log(\"se ha agregado un proceso con exito\");  \r\n    setProceso({nombre:\"\",tamanio:\"\"})\r\n  }\r\n\r\n  return (\r\n  <>\r\n      \r\n      {mode===\"byte\"? \r\n        <div className='container'>\r\n          <h1>Memoria</h1>\r\n          <table className=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n              {memoria.map((bit,i)=>(\r\n                <th key ={i} scope=\"col\" >{bit.posicion}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n              {memoria.map((bit,i)=>(\r\n                <th key ={i} scope=\"col\">{bit.contenido}</th>\r\n                ))}\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      :\r\n        <div className='container'>\r\n          <h1>Memoria</h1>\r\n          <table className=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n              {memoria2.map((bit,i)=>(\r\n                <th key ={i} scope=\"col\" >{bit.posicion}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n              {memoria2.map((bit,i)=>(\r\n                <th key ={i} scope=\"col\">{bit.contenido}</th>\r\n                ))}\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      }\r\n      \r\n      \r\n      \r\n      {/*------Formulario*/}\r\n        <div className='container'> \r\n          <select className=\"form-select\" defaultValue=\"\"  onChange={(e)=>{setMode(e.target.value)}}>\r\n            <option value=\"\" disabled>--Selecione--</option>\r\n            <option value=\"byte\" >Por Byte</option>\r\n            <option value=\"bloque\">Por Bloque</option>\r\n          </select>\r\n          <div className='container'>\r\n            {mode===\"byte\"? \r\n            /*por byte*/\r\n              <div className=''>\r\n                <h1>Modo: {mode}</h1>\r\n                <h3>Crea un archivo</h3>\r\n                <br/>\r\n                <form>\r\n                  <label>Nombre del archivo </label>\r\n                  <input \r\n                    type=\"text\"\r\n                    value={proceso.nombre}\r\n                    onChange={(e)=>{setProceso({...proceso,nombre:e.target.value})}}\r\n                  />\r\n                  <br/>\r\n                  <br/>\r\n                  <label>Tamanio del archivo </label>\r\n                  <input \r\n                    type=\"number\"\r\n                    value={proceso.tamanio}\r\n                    onChange={(e)=>{setProceso({...proceso,tamanio:parseInt(e.target.value)})}}\r\n                    />\r\n                    <br/>\r\n                    <br/>\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={agregaProceso} >Crear Archivo</button>\r\n                </form>\r\n                <br/>\r\n                <h2>Lista de Archivos</h2>\r\n                <div>\r\n                  <ul className='d-flex'>\r\n                  {listaArchivos.map((archi)=>(\r\n                    <div className=\"card border-success m-1\">\r\n                      <div className=\"card-header bg-transparent border-success\">\r\n                        <h5>{archi.nombre}</h5>\r\n                      </div>\r\n                      <div className=\"card-body text-success\">\r\n                        <h5 className=\"card-title\">{archi.tamanio}</h5>\r\n                      </div>\r\n                      <div className=\"card-footer bg-transparent border-success\">\r\n                          <button type=\"button\" \r\n                            className=\"btn btn-danger\" \r\n                            onClick={()=>{eliminaArchivo(archi.nombre)}}\r\n                            >x\r\n                          </button>\r\n                      </div>    \r\n                    </div>\r\n                  ))\r\n                  }\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            /*por Bloque*/\r\n            :<div>\r\n                <h2>Modo: {mode}</h2>\r\n                  {nBloques===0 && mode===\"bloque\" ?  \r\n                  <div>\r\n                    <h2>Ingresa tamanio x bloque</h2>\r\n                    <select className=\"form-select\" defaultValue=\"\"  onChange={(e)=>{setNBloques(parseInt(e.target.value))}}>\r\n                      <option value=\"\" disabled>--Selecione--</option>\r\n                      <option value=\"2\" >2</option>\r\n                      <option value=\"3\" >3</option>\r\n                      <option value=\"4\" >4</option>\r\n                      <option value=\"5\" >5</option>\r\n                      <option value=\"6\" >6</option>\r\n                      <option value=\"7\" >7</option>\r\n                      <option value=\"8\" >8</option>\r\n                      <option value=\"9\" >9</option>\r\n                      <option value=\"10\" >10</option>\r\n                      <option value=\"11\" >11</option>\r\n                      <option value=\"12\" >12</option>\r\n                      <option value=\"13\" >13</option>\r\n                      <option value=\"14\" >14</option>\r\n                      <option value=\"15\" >15</option>\r\n                      <option value=\"16\" >16</option>\r\n                      <option value=\"17\" >17</option>\r\n                      <option value=\"18\" >18</option>\r\n                      <option value=\"19\" >19</option>\r\n                      <option value=\"20\" >20</option>\r\n                    </select>\r\n                  </div>\r\n                  :\r\n                    <div className='container'> \r\n                      <h4>Tamanio x Bloque: {nBloques}</h4>\r\n                      <form>\r\n                        <label>Nombre del archivo </label>\r\n                        <input \r\n                          type=\"text\"\r\n                          value={proceso.nombre}\r\n                          onChange={(e)=>{setProceso({...proceso,nombre:e.target.value})}}\r\n                        />\r\n                        <br/>\r\n                        <br/>\r\n                        <label>Tamanio del archivo </label>\r\n                        <input \r\n                          type=\"number\"\r\n                          value={proceso.tamanio}\r\n                          onChange={(e)=>{setProceso({...proceso,tamanio:parseInt(e.target.value)})}}\r\n                          />\r\n                          <br/>\r\n                          <br/>\r\n                          <button type=\"button\" className=\"btn btn-primary\" onClick={agregaArchivoXbloque} >Crear Archivo</button>\r\n                      </form>\r\n                      <h2>Lista de Archivos</h2>\r\n                      <div>\r\n                        <ul className='d-flex'>\r\n                        {listaArchivos.map((archi)=>(\r\n                          <div className=\"card border-success m-1\">\r\n                            <div className=\"card-header bg-transparent border-success\">\r\n                              <h5>{archi.nombre}</h5>\r\n                            </div>\r\n                            <div className=\"card-body text-success\">\r\n                              <h5 className=\"card-title\">{archi.tamanio}</h5>\r\n                            </div>\r\n                            <div className=\"card-footer bg-transparent border-success\">\r\n                                <button type=\"button\" \r\n                                  className=\"btn btn-danger\" \r\n                                  onClick={()=>{eliminaArchivo(archi.nombre)}}\r\n                                  >x\r\n                                </button>\r\n                            </div>    \r\n                          </div>\r\n                        ))\r\n                        }\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  }\r\n            </div>\r\n            }\r\n          </div>\r\n        </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TipoAlmacenamiento;\r\n"]},"metadata":{},"sourceType":"module"}