{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salas\\\\Documents\\\\Programacion\\\\SistemasOperativosII\\\\practica_archivos\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { mapa } from \"./ArregloMapa\";\nimport { usuarios } from './users';\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport TipoAlmacenamiento from './Components/TipoAlmacenamiento';\nimport Login from './Components/Login';\nimport Raiz from './Components/Raiz';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  /***Estados del tipo de almacenamiento*/\n  const [memoria, setMemoria] = useState(mapa);\n  const [memoria2, setMemoria2] = useState([]);\n  const [mode, setMode] = useState(\"\");\n  const [nBloques, setNBloques] = useState(0);\n  const [espacios, setEspacios] = useState([]);\n  const [espacios2, setEspacios2] = useState([]);\n  const [proceso, setProceso] = useState({\n    nombre: \"\",\n    tamanio: 0\n  });\n  const [listaArchivos, setListaArchivos] = useState([]);\n  const [tamanioXbloque, setTamanioXbloque] = useState(0);\n  /*Estados de login*/\n\n  const [login, setLogin] = useState(false);\n  /*Estados del manejo de archivos por rutas*/\n\n  const [arregloRaiz, setArrgloRaiz] = useState([]);\n  const [focoRaiz, setFocoRaiz] = useState(false);\n  const [arregloVar, setArrgloVar] = useState([]);\n  const [focoVar, setFocoVar] = useState(false);\n  const [arregloHome, setArrgloHome] = useState([]);\n  const [focoHome, setFocoHome] = useState(false);\n  const [arregloTmp, setArrgloTmp] = useState([]);\n  const [focoTmp, setFocoTmp] = useState(false);\n  const [arregloU1, setArrgloU1] = useState([]);\n  const [focoU1, setFocoU1] = useState(false);\n  const [arregloU2, setArrgloU2] = useState([]);\n  const [focoU2, setFocoU2] = useState(false);\n  const [arregloDocs, setArrgloDocs] = useState([]);\n  const [focoDocs, setFocoDocs] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(TipoAlmacenamiento, {\n      memoria: memoria,\n      setMemoria: setMemoria,\n      memoria2: memoria2,\n      setMemoria2: setMemoria2,\n      mode: mode,\n      setMode: setMode,\n      nBloques: nBloques,\n      setNBloques: setNBloques,\n      espacios: espacios,\n      setEspacios: setEspacios,\n      espacios2: espacios2,\n      setEspacios2: setEspacios2,\n      proceso: proceso,\n      setProceso: setProceso,\n      listaArchivos: listaArchivos,\n      setListaArchivos: setListaArchivos,\n      tamanioXbloque: tamanioXbloque,\n      setTamanioXbloque: setTamanioXbloque,\n      login: login,\n      setLogin: setLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), !login ? /*#__PURE__*/_jsxDEV(Login, {\n      login: login,\n      setLogin: setLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 10\n    }, this) : /*#__PURE__*/_jsxDEV(Raiz, {\n      login: login,\n      setLogin: setLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"RuvOg3RVOwZTrohE8nstlvF7luQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/salas/Documents/Programacion/SistemasOperativosII/practica_archivos/src/App.js"],"names":["React","useState","mapa","usuarios","Routes","Route","Link","TipoAlmacenamiento","Login","Raiz","App","memoria","setMemoria","memoria2","setMemoria2","mode","setMode","nBloques","setNBloques","espacios","setEspacios","espacios2","setEspacios2","proceso","setProceso","nombre","tamanio","listaArchivos","setListaArchivos","tamanioXbloque","setTamanioXbloque","login","setLogin","arregloRaiz","setArrgloRaiz","focoRaiz","setFocoRaiz","arregloVar","setArrgloVar","focoVar","setFocoVar","arregloHome","setArrgloHome","focoHome","setFocoHome","arregloTmp","setArrgloTmp","focoTmp","setFocoTmp","arregloU1","setArrgloU1","focoU1","setFocoU1","arregloU2","setArrgloU2","focoU2","setFocoU2","arregloDocs","setArrgloDocs","focoDocs","setFocoDocs"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport {mapa} from \"./ArregloMapa\"\nimport { usuarios } from './users';\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport TipoAlmacenamiento from './Components/TipoAlmacenamiento'\nimport Login from './Components/Login'\nimport Raiz from './Components/Raiz';\nconst App = () => {\n  /***Estados del tipo de almacenamiento*/\n  const [memoria,setMemoria]=useState(mapa);\n  const [memoria2,setMemoria2]=useState([]);\n  const [mode,setMode]=useState(\"\");\n  const [nBloques,setNBloques]=useState(0);\n  const [espacios,setEspacios]=useState([]);\n  const [espacios2,setEspacios2]=useState([]);\n  const [proceso,setProceso]=useState({\n    nombre:\"\",\n    tamanio:0\n  });\n  const [listaArchivos, setListaArchivos]=useState([]);\n  const [tamanioXbloque,setTamanioXbloque]=useState(0);\n  /*Estados de login*/\n  const [login,setLogin]=useState(false);\n  \n  /*Estados del manejo de archivos por rutas*/\n  const [arregloRaiz,setArrgloRaiz]=useState([]);\n  const [focoRaiz,setFocoRaiz]=useState(false);\n  const [arregloVar,setArrgloVar]=useState([]);\n  const [focoVar,setFocoVar]=useState(false);\n  const [arregloHome,setArrgloHome]=useState([]);\n  const [focoHome,setFocoHome]=useState(false);\n  const [arregloTmp,setArrgloTmp]=useState([]);\n  const [focoTmp,setFocoTmp]=useState(false);\n  const [arregloU1,setArrgloU1]=useState([]);\n  const [focoU1,setFocoU1]=useState(false);\n  const [arregloU2,setArrgloU2]=useState([]);\n  const [focoU2,setFocoU2]=useState(false);\n  const [arregloDocs,setArrgloDocs]=useState([]);\n  const [focoDocs,setFocoDocs]=useState(false);\n\n  return (\n    <div className='container'>\n        <TipoAlmacenamiento\n          memoria={memoria} setMemoria={setMemoria}\n          memoria2={memoria2} setMemoria2={setMemoria2}\n          mode={mode} setMode={setMode}\n          nBloques={nBloques} setNBloques={setNBloques}\n          espacios={espacios} setEspacios={setEspacios}\n          espacios2={espacios2} setEspacios2={setEspacios2}\n          proceso={proceso} setProceso={setProceso}\n          listaArchivos={listaArchivos} setListaArchivos={setListaArchivos}\n          tamanioXbloque={tamanioXbloque} setTamanioXbloque={setTamanioXbloque}\n\n          login={login} setLogin={setLogin}\n        />\n        <hr/>\n        {!login\n        ?<Login\n        login={login} setLogin={setLogin}\n          />\n        :<Raiz \n          login={login} setLogin={setLogin}\n        />}\n        <hr/>\n\n        \n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}